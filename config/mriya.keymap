/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        clcl {
            bindings = <&kp LC(Q)>;
            key-positions = <4 3>;
        };

        lightshot {
            bindings = <&kp LC(LS(PRINTSCREEN))>;
            key-positions = <4 5>;
        };

        ctrl_f {
            bindings = <&kp LC(F)>;
            key-positions = <27 28>;
        };

        ctrl_shift_f {
            bindings = <&kp LC(LS(F))>;
            key-positions = <28 29>;
        };
    };

    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        lh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 10>;    // <---[[right-hand keys]]
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp LS(F10)    &kp Q            &kp W            &kp E                 &kp R                &kp T        &kp Y          &kp U                 &kp I                  &kp O             &kp P                     &kp LC(LA(O))
  &kp LC(N0)     &bhm LEFT_WIN A  &bhm LEFT_ALT S  &bhm LEFT_SHIFT D     &bhm LEFT_CONTROL F  &kp G        &kp H          &bhm RIGHT_CONTROL J  &bhm LEFT_SHIFT K      &bhm RIGHT_ALT L  &bhm RIGHT_WIN SEMICOLON  &kp LC(NUMBER_1)
  &kp LC(SLASH)  &kp Z            &kp X            &kp C                 &kp V                &kp B        &kp N          &kp M                 &kp COMMA              &kp DOT           &kp FSLH                  &kp LC(LA(T))
                                  &kp ESCAPE       &kp LEFT_PARENTHESIS  &lt 1 DEL            &kp ENTER    &kp BACKSPACE  &lt 2 SPACE           &kp RIGHT_PARENTHESIS  &lt 3 TAB
            >;
        };

        lower_layer {
            bindings = <
  &trans    &trans        &trans        &trans          &trans            &trans    &kp INS    &kp END        &kp UP_ARROW  &kp RIGHT_BRACKET  &kp LEFT_BRACKET      &kp TILDE
  &kp LBRC  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &trans    &kp HOME   &kp LEFT       &kp DOWN      &kp RIGHT          &kp SINGLE_QUOTE      &kp RBRC
  &kp LBKT  &kp LC(Z)     &kp LC(X)     &kp LC(C)       &kp LC(V)         &trans    &kp PG_UP  &kp PAGE_DOWN  &kp MINUS     &kp EQUAL          &kp NON_US_BACKSLASH  &kp RBKT
                          &trans        &trans          &trans            &trans    &trans     &trans         &trans        &trans
            >;
        };

        raise_layer {
            bindings = <
  &trans  &kp F1                 &kp F2                 &kp F3                   &kp F4              &kp F5       &kp F6     &kp F7        &kp F8              &kp F9            &kp F10           &kp F11
  &trans  &mt LEFT_WIN NUMBER_1  &mt LEFT_ALT NUMBER_2  &mt LEFT_SHIFT NUMBER_3  &mt LCTRL NUMBER_4  &kp N5       &kp N6     &mt RCTRL N7  &mt RIGHT_SHIFT N8  &mt RIGHT_ALT N9  &mt RIGHT_WIN N0  &trans
  &trans  &kp EXCL               &kp AT                 &kp HASH                 &kp DLLR            &kp PRCNT    &kp CARET  &kp AMPS      &kp STAR            &kp LPAR          &kp RPAR          &trans
                                 &trans                 &trans                   &trans              &trans       &trans     &trans        &trans              &trans
            >;
        };

        adjust_layer {
            bindings = <
  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader
  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
  &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                             &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
